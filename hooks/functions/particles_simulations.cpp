#include "../../sdk/sdk.hpp"
#include "../hooks.hpp"
#include <unordered_set>

std::unordered_set<std::size_t> molotov_hashes =
{
   fnv::hash("molotov_groundfire"),
   fnv::hash("molotov_groundfire_00MEDIUM"),
   fnv::hash("molotov_groundfire_00HIGH"),
   fnv::hash("molotov_groundfire_fallback"),
   fnv::hash("molotov_groundfire_fallback2"),
   fnv::hash("molotov_explosion"),
   fnv::hash("explosion_molotov_air"),
   fnv::hash("extinguish_fire"),
   fnv::hash("weapon_molotov_held"),
   fnv::hash("weapon_molotov_fp"),
   fnv::hash("weapon_molotov_thrown"),
   fnv::hash("incgrenade_thrown_trail")
};

std::unordered_set<std::size_t> smoke_hashes =
{
	fnv::hash("explosion_smokegrenade"),
    fnv::hash("explosion_smokegrenade_fallback"),
	fnv::hash("explosion_molotov_air_smoke"),
	fnv::hash("molotov_smoking_ground_child01"),
	fnv::hash("molotov_smoking_ground_child02"),
	fnv::hash("molotov_smoking_ground_child02_cheapo"),
	fnv::hash("molotov_smoking_ground_child03"),
	fnv::hash("molotov_smoking_ground_child03_cheapo"),
	fnv::hash("molotov_smoke_screen")
};

std::unordered_set<std::size_t> blood_hashes =
{
    fnv::hash("blood_impact_basic"),
	fnv::hash("blood_impact_basic_fallback"),
	fnv::hash("blood_impact_chunks1"),
	fnv::hash("blood_impact_drops1"),
	fnv::hash("blood_impact_dust"),
	fnv::hash("blood_impact_goop_heavy"),
	fnv::hash("blood_impact_goop_light"),
	fnv::hash("blood_impact_goop_medium"),
	fnv::hash("blood_impact_green_01"),
	fnv::hash("blood_impact_headshot"),
	fnv::hash("blood_impact_headshot_01b"),
	fnv::hash("blood_impact_headshot_01c"),
	fnv::hash("blood_impact_headshot_01d"),
	fnv::hash("blood_impact_headshot_01e"),
	fnv::hash("blood_impact_heavy"),
	fnv::hash("blood_impact_light"),
	fnv::hash("blood_impact_light_headshot"),
	fnv::hash("blood_impact_medium"),
	fnv::hash("blood_impact_mist1"),
	fnv::hash("blood_impact_mist1_light"),
	fnv::hash("blood_impact_mist_heavy"),
	fnv::hash("blood_impact_red_01"),
	fnv::hash("blood_impact_red_01_backspray"),
	fnv::hash("blood_impact_red_01_chunk"),
	fnv::hash("blood_impact_red_01_drops"),
	fnv::hash("blood_impact_red_01_goop_a"),
	fnv::hash("blood_impact_red_01_goop_a_backup"),
	fnv::hash("blood_impact_red_01_goop_b"),
	fnv::hash("blood_impact_red_01_goop_c"),
	fnv::hash("blood_impact_red_01_mist"),
	fnv::hash("blood_impact_yellow_01"),
	fnv::hash("blood_pool"),
	fnv::hash("explosion_screen_c4_blood"),
	fnv::hash("explosion_screen_c4_blood2"),
	fnv::hash("explosion_screen_c4_blood_OLD"),
	fnv::hash("explosion_screen_c4_blood_distance_culled"),
	fnv::hash("impact_blood_glow"),
	fnv::hash("impact_blood_glow_light"),
	fnv::hash("impact_blood_glow_light_master"),
	fnv::hash("impact_blood_glow_normal_master"),
	fnv::hash("screen_blood_splatter"),
	fnv::hash("screen_blood_splatter_a"),
	fnv::hash("screen_blood_splatter_b")
};

std::unordered_set<std::size_t> weapon_hashes =
{
	fnv::hash("weapon_muzzle_flash_assaultrifle"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_FP"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_fallback"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_fallback2"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_glow"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_main"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_main_FP"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_main_sub1"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_main_sub2"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_main_sub3"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_parent_silenced"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_silenced"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_silenced_glow"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_vent"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_vent_FP"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_vent_FP_cheap"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_vent_fallback"),
	fnv::hash("weapon_muzzle_flash_assaultrifle_vent_fire"),
	fnv::hash("weapon_muzzle_flash_assualtrifle_flame"),
	fnv::hash("weapon_muzzle_flash_autoshotgun"),
	fnv::hash("weapon_muzzle_flash_autoshotgun_FP"),
	fnv::hash("weapon_muzzle_flash_autoshotgun_FP_cheap"),
	fnv::hash("weapon_muzzle_flash_autoshotgun_fallback"),
	fnv::hash("weapon_muzzle_flash_autoshotgun_fallback2"),
	fnv::hash("weapon_muzzle_flash_autoshotgun_glow"),
	fnv::hash("weapon_muzzle_flash_autoshotgun_main"),
	fnv::hash("weapon_muzzle_flash_autoshotgun_main2"),
	fnv::hash("weapon_muzzle_flash_autoshotgun_main3"),
	fnv::hash("weapon_muzzle_flash_awp"),
	fnv::hash("weapon_muzzle_flash_awp_tracer"),
	fnv::hash("weapon_muzzle_flash_huntingrifle"),
	fnv::hash("weapon_muzzle_flash_huntingrifle_FP"),
	fnv::hash("weapon_muzzle_flash_huntingrifle_FP_cheap"),
	fnv::hash("weapon_muzzle_flash_huntingrifle_glow"),
	fnv::hash("weapon_muzzle_flash_huntingrifle_main"),
	fnv::hash("weapon_muzzle_flash_huntingrifle_main2"),
	fnv::hash("weapon_muzzle_flash_huntingrifle_main_fallback"),
	fnv::hash("weapon_muzzle_flash_huntingrifle_vent1"),
	fnv::hash("weapon_muzzle_flash_para"),
	fnv::hash("weapon_muzzle_flash_para_FP"),
	fnv::hash("weapon_muzzle_flash_para_FP_cheap"),
	fnv::hash("weapon_muzzle_flash_para_b"),
	fnv::hash("weapon_muzzle_flash_para_fallback"),
	fnv::hash("weapon_muzzle_flash_para_fallback2"),
	fnv::hash("weapon_muzzle_flash_para_flash"),
	fnv::hash("weapon_muzzle_flash_para_glow"),
	fnv::hash("weapon_muzzle_flash_para_main"),
	fnv::hash("weapon_muzzle_flash_para_main2"),
	fnv::hash("weapon_muzzle_flash_para_main_fallback"),
	fnv::hash("weapon_muzzle_flash_para_tracers"),
	fnv::hash("weapon_muzzle_flash_para_vent1"),
	fnv::hash("weapon_muzzle_flash_pistol"),
	fnv::hash("weapon_muzzle_flash_pistol_FP"),
	fnv::hash("weapon_muzzle_flash_pistol_FP_cheap"),
	fnv::hash("weapon_muzzle_flash_pistol_core"),
	fnv::hash("weapon_muzzle_flash_pistol_core2"),
	fnv::hash("weapon_muzzle_flash_pistol_elite"),
	fnv::hash("weapon_muzzle_flash_pistol_elite_FP"),
	fnv::hash("weapon_muzzle_flash_pistol_fallback"),
	fnv::hash("weapon_muzzle_flash_pistol_fallback2"),
	fnv::hash("weapon_muzzle_flash_pistol_main"),
	fnv::hash("weapon_muzzle_flash_pistol_main2"),
	fnv::hash("weapon_muzzle_flash_pistol_main2_silenced"),
	fnv::hash("weapon_muzzle_flash_pistol_silenced"),
	fnv::hash("weapon_muzzle_flash_shotgun"),
	fnv::hash("weapon_muzzle_flash_shotgun_FP"),
	fnv::hash("weapon_muzzle_flash_shotgun_FP_cheap"),
	fnv::hash("weapon_muzzle_flash_shotgun_glow"),
	fnv::hash("weapon_muzzle_flash_shotgun_glow2"),
	fnv::hash("weapon_muzzle_flash_shotgun_glow3"),
	fnv::hash("weapon_muzzle_flash_shotgun_main"),
	fnv::hash("weapon_muzzle_flash_shotgun_main2"),
	fnv::hash("weapon_muzzle_flash_smg"),
	fnv::hash("weapon_muzzle_flash_smg_FP"),
	fnv::hash("weapon_muzzle_flash_smg_FP_cheap"),
	fnv::hash("weapon_muzzle_flash_smg_backup"),
	fnv::hash("weapon_muzzle_flash_smg_fallback"),
	fnv::hash("weapon_muzzle_flash_smg_fallback2"),
	fnv::hash("weapon_muzzle_flash_smg_glow"),
	fnv::hash("weapon_muzzle_flash_smg_glow2"),
	fnv::hash("weapon_muzzle_flash_smg_glow3"),
	fnv::hash("weapon_muzzle_flash_smg_glow_silenced"),
	fnv::hash("weapon_muzzle_flash_smg_main"),
	fnv::hash("weapon_muzzle_flash_smg_main2"),
	fnv::hash("weapon_muzzle_flash_smg_main_silenced"),
	fnv::hash("weapon_muzzle_flash_smg_parent"),
	fnv::hash("weapon_muzzle_flash_smg_parent_silenced"),
	fnv::hash("weapon_muzzle_flash_smg_silenced"),
	fnv::hash("weapon_muzzle_flash_smg_silenced_FP"),
	fnv::hash("weapon_muzzle_flash_smg_silenced_FP_cheap"),
	fnv::hash("weapon_muzzle_flash_smoke_medium"),
	fnv::hash("weapon_muzzle_flash_smoke_small"),
	fnv::hash("weapon_muzzle_flash_smoke_small2"),
	fnv::hash("weapon_muzzle_flash_smoke_small3"),
	fnv::hash("weapon_muzzle_flash_smoke_small4"),
	fnv::hash("weapon_muzzle_flash_smoke_smallest"),
	fnv::hash("weapon_muzzle_flash_sparks"),
	fnv::hash("weapon_muzzle_flash_sparks2"),
	fnv::hash("weapon_muzzle_flash_sparks3"),
	fnv::hash("weapon_muzzle_flash_sparks4"),
	fnv::hash("weapon_muzzle_flash_sparks5"),
	fnv::hash("weapon_muzzle_flash_sparks6"),
	fnv::hash("weapon_muzzle_flash_sparks7"),
	fnv::hash("weapon_muzzle_flash_taser"),
	fnv::hash("weapon_muzzle_flash_taser_fallback"),
	fnv::hash("weapon_muzzle_flash_taser_fallback2"),
	fnv::hash("weapon_muzzle_smoke"),
	fnv::hash("weapon_muzzle_smoke_b"),
	fnv::hash("weapon_muzzle_smoke_bVersion#2"),
	fnv::hash("weapon_muzzle_smoke_long#2"),
	fnv::hash("weapon_muzzle_smoke_long_b#2"),
	fnv::hash("weapon_muzzleflash_illumination"),
	fnv::hash("weapon_muzzleflash_illumination_add"),
	fnv::hash("weapon_sensorgren_beeplight"),
	fnv::hash("weapon_sensorgren_beeplight_inner"),
	fnv::hash("weapon_sensorgren_debris"),
	fnv::hash("weapon_sensorgren_detlight"),
	fnv::hash("weapon_sensorgren_detlight_child01"),
	fnv::hash("weapon_sensorgren_detlight_child02"),
	fnv::hash("weapon_sensorgren_detonate"),
	fnv::hash("weapon_sensorgren_glow"),
	fnv::hash("weapon_sensorgren_glowring"),
	fnv::hash("weapon_sensorgren_smoke"),
	fnv::hash("weapon_sensorgren_spark_01"),
	fnv::hash("weapon_sensorgren_spark_02"),
	fnv::hash("weapon_sensorgren_spark_02b"),
	fnv::hash("weapon_sensorgren_spark_03"),
	fnv::hash("weapon_sensorgren_wiggly"),
	fnv::hash("weapon_shell_casing_50cal"),
	fnv::hash("weapon_shell_casing_50cal_bonus"),
	fnv::hash("weapon_shell_casing_50cal_fallback"),
	fnv::hash("weapon_shell_casing_9mm"),
	fnv::hash("weapon_shell_casing_9mm_backup"),
	fnv::hash("weapon_shell_casing_9mm_fallback"),
	fnv::hash("weapon_shell_casing_9mm_fp"),
	fnv::hash("weapon_shell_casing_9mm_fp_fallback"),
	fnv::hash("weapon_shell_casing_candycorn"),
	fnv::hash("weapon_shell_casing_minigun"),
	fnv::hash("weapon_shell_casing_minigun_fallback"),
	fnv::hash("weapon_shell_casing_rifle"),
	fnv::hash("weapon_shell_casing_rifle_fallback"),
	fnv::hash("weapon_shell_casing_shotgun"),
	fnv::hash("weapon_shell_casing_shotgun_fallback"),
	fnv::hash("weapon_shell_casing_super_trail"),
	fnv::hash("weapon_shell_casing_super_trail_base"),
	fnv::hash("weapon_shell_casing_super_trail_glow"),
	fnv::hash("weapon_shell_casing_super_trail_smoke"),
	fnv::hash("weapon_shell_casing_super_trail_sparks"),
	fnv::hash("weapon_shell_casing_super_trail_sparks2"),
	fnv::hash("weapon_shell_eject_smoke_assrifle2"),
	fnv::hash("weapon_shell_eject_smoke_assrifle3"),
	fnv::hash("weapon_shell_eject_smoke_awp2"),
	fnv::hash("weapon_shell_eject_smoke_awp3"),
	fnv::hash("weapon_shell_eject_smoke_para2"),
	fnv::hash("weapon_shell_eject_smoke_para3"),
	fnv::hash("weapon_shell_eject_smoke_pistol1"),
	fnv::hash("weapon_shell_eject_smoke_pistol2"),
	fnv::hash("weapon_shell_eject_smoke_pistol3"),
	fnv::hash("weapon_shell_eject_smoke_pistol_elite"),
	fnv::hash("weapon_shell_eject_smoke_rifle2"),
	fnv::hash("weapon_shell_eject_smoke_rifle3"),
	fnv::hash("weapon_shell_eject_smoke_shotgun1"),
	fnv::hash("weapon_shell_eject_smoke_shotgun2"),
	fnv::hash("weapon_shell_eject_smoke_shotgun3"),
	fnv::hash("weapon_shell_eject_smoke_smg1"),
	fnv::hash("weapon_shell_eject_smoke_smg3"),
	fnv::hash("weapon_taser_flash"),
	fnv::hash("weapon_taser_flash_impact"),
	fnv::hash("weapon_taser_glow"),
	fnv::hash("weapon_taser_glow_impact"),
	fnv::hash("weapon_taser_sparks"),
	fnv::hash("weapon_taser_sparks_impact"),
	fnv::hash("weapon_tracers"),
	fnv::hash("weapon_tracers_50cal"),
	fnv::hash("weapon_tracers_50cal_glow"),
	fnv::hash("weapon_tracers_50cal_low"),
	fnv::hash("weapon_tracers_50cal_low_glow"),
	fnv::hash("weapon_tracers_assrifle"),
	fnv::hash("weapon_tracers_backup"),
	fnv::hash("weapon_tracers_mach"),
	fnv::hash("weapon_tracers_original"),
	fnv::hash("weapon_tracers_pistol"),
	fnv::hash("weapon_tracers_rifle"),
	fnv::hash("weapon_tracers_shot"),
	fnv::hash("weapon_tracers_smg"),
	fnv::hash("weapon_tracers_taser"),
	fnv::hash("weapon_tracers_taser_fallback"),
	fnv::hash("weapon_tracers_taser_fallback2"),
	fnv::hash("weapon_tracers_taser_wire1a"),
	fnv::hash("weapon_tracers_taser_wire1b"),
	fnv::hash("weapon_tracers_taser_wire2"),
	fnv::hash("ricochet_sparks"),
	fnv::hash("ricochet_sparks_contrast_glow"),
	fnv::hash("ricochet_sparks_contrast_glow_soft"),
	fnv::hash("ricochet_sparks_contrast_shadow"),
	fnv::hash("effects/tesla_glow_noz")
};

void __fastcall sdk::hooks::particle::simulations(CParticleCollection* thisptr, void* edx)
{
	sdk::hooks::particle::ofunc(thisptr, edx);

	if (!c::visuals::world::particles::enable)
	{
		return;
	}

	CParticleCollection* root = thisptr;

	while (root->m_pParent)
		root = root->m_pParent;

	std::string namering = root->m_pDef.m_pObject->m_Name.buffer;
	size_t name = std::hash<std::string>{}(namering);

	for (int i = 0; i < thisptr->m_nActiveParticles; i++) 
	{
		auto get_alpha = thisptr->m_ParticleAttributes.FloatAttributePtr(PARTICLE_ATTRIBUTE_ALPHA, i);
		*get_alpha = std::clamp(*get_alpha, 0.f, c::visuals::world::particles::color[3]);

		float* get_color = thisptr->m_ParticleAttributes.FloatAttributePtr(PARTICLE_ATTRIBUTE_TINT_RGB, i);

		get_color[0] = c::visuals::world::particles::color[0];
		get_color[4] = c::visuals::world::particles::color[1];
		get_color[8] = c::visuals::world::particles::color[2];
	}
}
